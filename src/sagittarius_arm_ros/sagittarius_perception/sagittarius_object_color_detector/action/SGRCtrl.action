# Define the goal

# The definition item of the grasp_type parameter
# Set the current gripper state, set before the action is executed
uint8 GRASP_NONE = 0 # Used in custom actions, the gripper will not be processed
uint8 GRASP_OPEN = 1 # Open the gripper, put it down
uint8 GRASP_CLOSE = 2 # close the gripper, grab action

# Definition item of action_type parameter
# The type of action that needs to be performed, you can specify the end pose or calculate it automatically
# Custom posture: let the robot arm reach a certain target point
# Preset action: it is a series of actions to execute a preset
uint8 ACTION_TYPE_XYZ = 0 # Custom attitude: end attitude uses dynamic calculation
uint8 ACTION_TYPE_XYZ_RPY = 1 # Custom pose: the end pose uses the given pose
uint8 ACTION_TYPE_DEFINE_STAY = 2 # default action: standby
uint8 ACTION_TYPE_DEFINE_SAVE = 3 # default action: safe position state
uint8 ACTION_TYPE_PICK_XYZ = 4 # default action: XYZ pick action
uint8 ACTION_TYPE_PICK_XYZ_RPY = 5 # Default action: XYZ+RPY pick action
uint8 ACTION_TYPE_PUT_XYZ = 6 # Default action: XYZ put action
uint8 ACTION_TYPE_PUT_XYZ_RPY = 7 # Default action: XYZ+RPY put action

uint8 grasp_type # terminal initialization state
uint8 action_type # action type

# Target point position
float64 pos_x
float64 pos_y
float64 pos_z
float64 pos_roll
float64 pos_pitch
float64 pos_yaw

---
# Define the result
uint8 SUCCESS = 0
uint8 ERROR = 1
uint8 PREEMPT = 2
uint8 PLAN_NOT_FOUND = 3
uint8 GRASP_FAILD = 4 # GRASP_FAILD

# Results of the
uint8 result

---
# Define a feedback message
uint8 PLANNING = 0
uint8 EXEC_POSITION = 1
uint8 EXEC_GRASP = 2

# current step
uint8 step